Include("Common")
Include("Common_P0")

g_pid_lueur			= "PID_リュール"
g_pid_boss			= "PID_G001_チキ"
g_pid_boss_doragon		= "PID_G001_チキ_竜化"
g_pid_bossB			= "PID_G001_チキ_特効無効"
g_pid_bossB_doragon		= "PID_G001_チキ_竜化_特効無効"

g_Width			= 32
g_Height		= 32

g_1stIceSheet	= "1"
g_2ndIceSheet	= "2"

-- Bmapに出現する氷床をまとめた配列
-- 0 初期から設置されている氷床
-- 1 左の部屋へ続く扉が開いたときに設置される氷床
-- 2 チキのいる部屋へ続く扉が開いたときに設置される氷床
--   床、地面
-- P 柱
-- D 防衛床
-- M 水路
-- W 林
-- T 宝箱
-- # 壁、低壁
g_IceSheetMap = {
	"W"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",
	"#","#","#","#","#","#"," "," "," "," "," "," "," ","#","#","#","#","#","#","#"," "," "," "," "," "," "," "," "," "," ",
	"#","#","#","#","#","#"," "," "," "," "," "," "," ","#","#","#","#","#","#","#"," "," ","#","#","#","#","#","#","#"," ",
	"T"," "," "," ","T","#"," "," ","M","M"," "," "," ","#"," ","0"," ","0"," ","#"," "," ","#","#","#","#","#","#","#"," ",
	"1","1"," ","1","1","#"," "," ","M","M","M"," "," ","#"," ","0","T","0"," ","#"," "," ","#","2","2","2","2","2","#"," ",
	" ","1","1","1"," ","#"," "," "," ","M","M","M"," ","#"," ","0","0","0"," ","#"," "," ","#","2"," "," "," ","2","#"," ",
	" "," ","1"," "," ","#"," "," ","M","M","M","M"," ","#","#","#"," ","#","#","#"," "," ","#","2"," "," "," ","2","#"," ",
	" "," ","2"," "," ","#"," "," ","M","M","M"," "," ","#","#","#"," ","#","#","#"," "," ","#"," "," "," "," "," ","#"," ",
	"#","#","2","#","#","#"," "," ","M","M"," "," "," "," "," ","#","0","#"," "," "," "," ","#","#","#"," ","#","#","#"," ",
	"#","#","2","#","#","#"," "," "," "," "," "," "," ","#","#","#","0","#","#","#"," "," ","#","#","#","0","#","#","#"," ",
	" ","#","0","#"," "," "," "," "," "," "," "," "," ","#","#","#","1","#","#","#"," "," "," "," ","#","0","#"," "," "," ",
	" ","#","0","#","#","#","#","#","#","#","#","#","#","#","P","0","1"," ","P","#","#","#","#","#","#"," ","#","#","#"," ",
	" ","#"," ","#","#","#","#","#","#","#","#","#","#","#","0","0"," "," ","0","#","#","#","#","#","#"," ","#","#","#"," ",
	" ","#"," ","0","0"," ","1","1"," "," ","1","0","0","1","1","1"," ","0","0"," "," "," ","2","2","0","0"," "," ","#"," ",
	" ","#"," ","0","2","2","2","1","0","1","1","0","1","1"," "," "," ","0"," "," ","2","2","2","0","2","2","0","2","#"," ",
	" ","#","1","1"," "," "," ","0","0","1"," "," "," "," "," ","0"," "," "," ","0","0","0"," "," "," "," ","2"," ","#"," ",
	" ","#","#","#","#","#","#","#","#","#","#","#"," ","#","P","0","0"," ","P","#"," ","#","#","#","#","#","#","#","#"," ",
	" ","#","#","#","#","#","#","#","#","#","#","#"," ","#"," ","0","0"," "," ","#"," ","#","#","#","#","#","#","#","#"," ",
	" ","#","#","#","#","#","#","#","#","#","#","#"," ","#","P","0"," ","0","P","#"," ","#","#","#","#","#","#","#","#"," ",
	" "," "," "," "," "," ","#","#","#"," "," ","#"," ","#"," "," ","0","0"," ","#"," ","#"," "," ","#","#","#"," "," "," ",
	" "," "," "," "," ","#","#"," ","#","#"," ","#"," ","#","#"," ","2","2","#","#","0","#"," ","#","#"," ","#","#"," "," ",
	" "," "," ","D"," ","#"," "," "," ","#"," ","#"," ","#","#","0","0","0","#","#","0","#"," ","#"," "," "," ","#"," ","D",
	"W"," "," "," "," ","#","#"," ","#","#"," ","#","0","0","#"," "," "," ","#"," "," ","#"," ","#","#"," ","#","#"," "," ",
	"W"," "," "," "," "," ","#","#","#"," "," ","#","#"," ","#"," "," "," ","#"," ","#","#"," "," ","#","#","#"," "," ","M",
	" "," "," "," "," "," "," "," "," "," "," ","#","#"," ","#","0","0","0","#"," ","#","#"," "," "," "," "," "," ","M","M",
	" "," "," "," "," "," "," ","D"," "," "," "," ","#","#","#","2"," ","2","#","#","#"," "," "," "," ","D"," "," ","M","M",
	" "," "," "," "," "," "," "," "," "," "," "," ","#","#","#"," "," "," ","#","#","#"," "," "," "," "," "," "," ","M","M",
	" "," "," "," "," "," "," ","M","M"," "," "," ","#","#","#"," "," "," ","#","#","#"," "," "," "," "," "," "," ","M","M",
	" "," "," "," "," "," ","M","M","M"," "," "," "," "," "," ","0","0","0"," "," "," "," "," "," "," "," "," "," "," ","M",
	" "," "," "," "," "," ","M","M","M"," "," "," "," "," "," "," "," "," "," "," "," "," ","W","W"," "," "," "," ","M","M",
}

-- -----------------------------------

function Startup()
	
	Log("Startup12346");

    SaveAndSetPlayerUnitsToLevel1()

	Startup_神竜の章_対象紋章士を一時的に無効化( "GID_チキ" )
	
	-- 勝利条件の設定
	WinRuleSetDestroyBoss( true )	-- 敵将撃破
	WinRuleSetMID( "MID_RULE_G001_WIN" )
	
	変数登録()
	イベント登録()	
end

-- -----------------------------------

-- 全局变量用于保存单位等级
g_savedUnitLevels = {}

-- 保存我方单位等级并设置为 1 级
function SaveAndSetPlayerUnitsToLevel1()
    local unit = ForceUnitGetFirst(FORCE_ABSENT)
    while unit ~= nil do
        local currentLevel = UnitGetLevel(unit)
        Log(currentLevel)
        g_savedUnitLevels[unit] = currentLevel  -- 保存原始等级
        UnitSetLevel(unit, 1)                   -- 设置为 40 级
        unit = ForceUnitGetNext(unit)
    end
end

-- 恢复我方单位原始等级
function RestorePlayerUnitsOriginalLevels()
    for unit, level in pairs(g_savedUnitLevels) do
            UnitSetLevel(unit, level)
    end
    g_savedUnitLevels = {}  -- 清空保存数据
end

-- -----------------------------------------------


function Cleanup()
	
	Log("Cleanup");
	
	Cleanup_神竜の章_対象紋章士の無効化解除( "GID_チキ" )
	
end

-- -----------------------------------

function Opening()
	
	Log("Opening");
	
	PuppetDemo("G001", "MID_OP1")
	FadeInAndWait(FADE_NORMAL)
	Movie("Kengen14")
	SkipEscape()
	FadeOutAndWait(FADE_NORMAL)
	PuppetDemo("G001", "MID_OP2")
	
end

-- -----------------------------------

function MapOpening()
	
	Log("MapOpening");
	
	EffectCreate("魔法陣_G001",			17, 27)
	EffectCreate("魔法陣_G001",			 3, 27)
	
	if condition_アイテム入手() then
		EffectCreate("ドロップアイテム", 9, 25)
		TerrainSetOne(9, 25, "TID_謎の平地")
	end

    RestorePlayerUnitsOriginalLevels()
	チキのスキル設定();

end

-- -----------------------------------


function CheckFunctionExists(funcName)
    local func = _G[funcName]
    if type(func) == "function" then
        Log("✅ " .. funcName .. " exits")
    else
        Log("❌ " .. funcName .. " not exists")
    end
end

function MapEnding()
	
	Log("MapEnding");
	
end

-- -----------------------------------

function Ending()
	
	Log("Ending");

	PuppetDemo("G001", "MID_ED1")

	神竜の章_紋章士加入( "GID_チキ" )
	
	if GodUnitExists("GID_マルス") then
		PuppetDemo("G001", "MID_ED2")
	end
	
	FadeInAndWait(FADE_FAST)
	Tutorial("TUTID_紋章士チキ")

end

-- -----------------------------------

function GameOver()
	
	Log("GameOver");
	
end

-- -----------------------------------
function ボスのPIDを取得()
	
	if UnitExistOnMap( g_pid_boss ) then
		return g_pid_boss
		
	if UnitExistOnMap( g_pid_boss_doragon ) then
		return g_pid_boss_doragon
		
	elseif UnitExistOnMap( g_pid_bossB ) then
		return g_pid_bossB
		
	elseif UnitExistOnMap( g_pid_bossB_doragon ) then
		return g_pid_bossB_doragon
		
	end
	
	return ""
	
end

-- -----------------------------------
function EmptyFunction()
end

-- -----------------------------------

function 変数登録()
	VariableEntry("左のスイッチ_済", 0)
	VariableEntry("中央のスイッチ_済", 0)
	VariableEntry("戦闘前会話_チキ_マルス_済", 0)
end

-- -----------------------------------

function イベント登録()

	EventEntryTurn( 戦闘開始直後,	1,  1, FORCE_PLAYER )
	EventEntryTurn( 勝利条件_紋章士にフォーカス, 1, 1, FORCE_PLAYER )

	EventEntryArea(エリア_氷床, 11, 1, 24, 11, FORCE_PLAYER, "氷床イベント_済" )

	EventEntryTurn(増援１, 14, 14, FORCE_PLAYER)
	EventEntryTurn(増援２, 17, 17, FORCE_PLAYER)
	EventEntryTurn(増援３, 20, 20, FORCE_PLAYER)
	EventEntryTurn(増援４, 23, 23, FORCE_PLAYER)
	EventEntryTurn(増援５, 26, 26, FORCE_PLAYER)
	EventEntryTurn(増援６, 29, 29, FORCE_PLAYER)
	EventEntryTurn(増援７, 32, 32, FORCE_PLAYER)
	EventEntryTurn(増援８, 35, 35, FORCE_PLAYER)	
	
	EventEntryArea(左のスイッチ_作動, 3, 27, 3, 27, FORCE_PLAYER, "左のスイッチ_済")
	EventEntryArea(中央のスイッチ_作動, 17, 27, 17, 27, FORCE_PLAYER, "中央のスイッチ_済")

	EventEntryArea(アイテム入手, 9, 25, 9, 25, FORCE_PLAYER, condition_アイテム入手)

	EventEntryTbox(宝箱入手,17, 26, "IID_2000G")
	EventEntryTbox(宝箱入手, 1, 27, "IID_レスキュー")
	EventEntryTbox(宝箱入手, 5, 27, "IID_ワープ")

	EventEntryBattleTalk( リュールと戦闘,	g_pid_lueur,	FORCE_PLAYER, "PID_G001_チキ_竜化",	FORCE_ENEMY, true, "戦闘前会話_チキ_リュール_済" )
	EventEntryBattleTalk( リュールと戦闘,	g_pid_lueur,	FORCE_PLAYER, "PID_G001_チキ",	FORCE_ENEMY, true, "戦闘前会話_チキ_リュール_済" )
	EventEntryBattleTalk( リュールと戦闘,	g_pid_lueur,	FORCE_PLAYER, "PID_G001_チキ_竜化_特効無効",	FORCE_ENEMY, true, "戦闘前会話_チキ_リュール_済" )
	EventEntryBattleTalk( リュールと戦闘,	g_pid_lueur,	FORCE_PLAYER, "PID_G001_チキ_特効無効",	FORCE_ENEMY, true, "戦闘前会話_チキ_リュール_済" )

	EventEntryBattleTalk( マルスと戦闘,		"",				FORCE_PLAYER, "PID_G001_チキ_竜化",	FORCE_ENEMY, true, condition_マルスと戦闘 )
	EventEntryBattleTalk( マルスと戦闘,		"",				FORCE_PLAYER, "PID_G001_チキ",	FORCE_ENEMY, true, condition_マルスと戦闘 )
	EventEntryBattleTalk( マルスと戦闘,		"",				FORCE_PLAYER, "PID_G001_チキ_竜化_特効無効",	FORCE_ENEMY, true, condition_マルスと戦闘 )
	EventEntryBattleTalk( マルスと戦闘,		"",				FORCE_PLAYER, "PID_G001_チキ_特効無効",	FORCE_ENEMY, true, condition_マルスと戦闘 )
	
	-- --------------------------------------------------
	EventEntryEscape(離脱イベント, 3, 6, "PID_リュール", condition_true)
end

-- -----------------------------------
function チキのスキル設定()
	
	if UnitExistOnMap( ボスのPIDを取得() ) then
		スキル装備( ボスのPIDを取得(), "SID_ダメージ無効化" )

	end		
end

-- -----------------------------------
function チキのスキル解除()
	
	if UnitExistOnMap( ボスのPIDを取得() ) then
		スキル解除( ボスのPIDを取得(), "SID_ダメージ無効化" )
	end	
end

-- -----------------------------------

function 戦闘開始直後()
	
	-- チキ
		CursorSetPos_FromPid( ボスのPIDを取得() )
		Talk( "MID_EV1" )

		CursorAnimeCreate( 26, 22 )
		CursorAnimeCreate(  3, 22 )
		Talk("MID_EV2")
		CursorAnimeDelete()

		CursorAnimeCreate(  3, 27 )
		CursorAnimeCreate( 17, 27 )
		Talk("MID_EV3")

		Talk("MID_EV4")
		CursorAnimeDelete()

end

-- -----------------------------------

function 勝利条件_紋章士にフォーカス()
	CursorAnimeCreate_FromPid( ボスのPIDを取得() )
	WinRule()
	CursorAnimeDelete()
end

-- -----------------------------------
function エリア_氷床()
		
		-- 氷床の説明()
		CursorSetPos(18, 2)
		MapCameraWait()
		
		MapObjectCreate("Eff_Cursor01", "Effects/BMap/UI/Guide/Prefabs/Eff_Cursor_W1H1", 16, 2)
		MapObjectCreate("Eff_Cursor02", "Effects/BMap/UI/Guide/Prefabs/Eff_Cursor_W1H1", 17, 2)
		MapObjectCreate("Eff_Cursor03", "Effects/BMap/UI/Guide/Prefabs/Eff_Cursor_W1H1", 18, 2)
		WaitTime( 2.0 )
		MapObjectDelete("Eff_Cursor01")
		MapObjectDelete("Eff_Cursor02")
		MapObjectDelete("Eff_Cursor03")
		
		Talk( "MID_EV5" )
		CursorSetPos_FromPid( "PID_リュール" )
		
	end

-- -----------------------------------

function 増援１()
	
	Dispos( "Reinforcement1_1", DISPOS_FLAG_FOCUS )
	Yield()
	WaitTime( 0.5 )
	
	
end

-- -----------------------------------

function 増援２()
	
	Dispos( "Reinforcement1_2", DISPOS_FLAG_FOCUS )
	Yield()
	WaitTime( 0.5 )
	
end

-- -----------------------------------

function 増援３()
	
	Dispos( "Reinforcement1_3", DISPOS_FLAG_FOCUS )
	Yield()
	WaitTime( 0.5 )
	
end

-- -----------------------------------

function 増援４()
	
	Dispos( "Reinforcement1_4", DISPOS_FLAG_FOCUS )
	Yield()
	WaitTime( 0.5 )
	
end

-- -----------------------------------

function 増援５()
	
	Dispos( "Reinforcement1_5", DISPOS_FLAG_FOCUS )
	Yield()
	WaitTime( 0.5 )
	
end

-- -----------------------------------

function 増援６()
	
	Dispos( "Reinforcement1_6", DISPOS_FLAG_FOCUS )
	Yield()
	WaitTime( 0.5 )
	
end

-- -----------------------------------

function 増援７()
	
	Dispos( "Reinforcement1_7", DISPOS_FLAG_FOCUS )
	Yield()
	WaitTime( 0.5 )
	
end

-- -----------------------------------

function 増援８()
	
	Dispos( "Reinforcement1_8", DISPOS_FLAG_FOCUS )
	Yield()
	WaitTime( 0.5 )
	
end

-- -----------------------------------

function 中央のスイッチ_作動()
	
	-- 指定の座標とその周囲で展開している全戦闘禁止設定の地形を
	-- 通常の床に塗り替える
	TerrainFill( 3, 25, "TID_床" )
	TerrainSetOne( 3, 27, "TID_魔法陣" )
	TerrainSetOne( 1, 27, "TID_宝箱" )
	TerrainSetOne( 5, 27, "TID_宝箱" )
	
	-- 魔法陣のある地形を通常の床に変更する
	TerrainSetOne( 17, 27, "TID_床" )
	
	左の部屋の扉_開放()

	-- 魔法陣のエフェクトを消す
	EffectDelete("魔法陣_G001", 17, 27)

	Talk("MID_EV6")

	WaitTime( 0.5 )

end

-- -----------------------------------

function 左のスイッチ_作動()
	
	-- 指定の座標とその周囲で展開している全戦闘禁止設定の地形を
	-- 通常の床に塗り替える
	TerrainFill( 26, 24, "TID_床" )
	
	-- 魔法陣のある地形を通常の床に変更する
	TerrainSetOne( 3, 27, "TID_床" )
	
	チキのいる部屋の扉_開放()

	-- 魔法陣のエフェクトを消す
	EffectDelete("魔法陣_G001", 3, 27)

	Talk("MID_EV7")
	WaitTime( 0.5 )

	CursorSetPos_FromPid( ボスのPIDを取得() )
	Talk("MID_EV8")
	
	-- 竜化演出
	local unit = UnitGetByPos( 26, 25 )
	if unit != nil then
		EffectPlay( "竜化_G1" , 26, 25 )
		WaitTime( 0.5 )
		UnitDelete( unit )
		Dispos( "TikiDragon", DISPOS_FLAG_FOCUS + DISPOS_FLAG_FORCED )
		
	else
		Log( "【Script】（26, 25）にユニットがいないため、チキを取得できなかった" )
		
	end

	-- チキの竜化演出を見届けるため、少し待つ
	WaitTime( 1.5 )

	local x = UnitGetX( MindGetUnit() )
	local z = UnitGetZ( MindGetUnit() )

	CursorSetPos( x, z )
	MapCameraWait()

end

-- -----------------------------------

function 左の部屋の扉_開放()

	if VariableGet( "扉_3_22" ) == 0 then

		WaitTime( 0.5 )

		CursorSetDistanceMode( CURSOR_DISTANCE_FAR )
		
		-- 開く扉にカメラを向ける
		CursorSetPos( 3, 22 )
		MapCameraWait()

		-- 扉を開ける
		魔法の扉を開く( 3, 22 )

		-- 出現する氷床をユーザーに見せるため、カメラをステージ中央に寄せる
		CursorSetPos(17, 16)
		MapCameraWait()

		氷床出現( g_1stIceSheet )

		WaitTime( 1.5 )

		-- 氷床の出現を見届けたら、操作していたユニットにカメラを戻す
		local x = UnitGetX( MindGetUnit() )
		local z = UnitGetZ( MindGetUnit() )

		CursorSetPos( x, z )
		MapCameraWait()
		
	end
end

-- -----------------------------------

function チキのいる部屋の扉_開放()

	if VariableGet( "扉_26_22" ) == 0 then

		WaitTime( 0.5 )

		CursorSetDistanceMode( CURSOR_DISTANCE_FAR )
		
		-- 開く扉にカメラを向ける
		CursorSetPos( 26, 22 )
		MapCameraWait()
		
		-- 扉を開ける
		魔法の扉を開く( 26, 22 )

		-- 出現する氷床をユーザーに見せるため、カメラをステージ中央に寄せる
		CursorSetPos(17, 16)
		MapCameraWait()

		氷床出現( g_2ndIceSheet )

		WaitTime( 1.5 )

		-- 氷床の出現を見届けたら、操作していたユニットにカメラを戻す
		local x = UnitGetX( MindGetUnit() )
		local z = UnitGetZ( MindGetUnit() )

		CursorSetPos( x, z )
		MapCameraWait()

		チキのスキル解除()

	end
end

-- -----------------------------------

function 魔法の扉を開く( x, z )

	EventActionObject( x, z, MAP_ACTION_DONE )

	-- 扉が開くまで待機する
	WaitTime( 2.0 )
	
	-- 扉があった地形を床に変更する
	TerrainSetBegin()
	TerrainSet( x, z, "TID_床" )
	TerrainSetEnd()

end

-- -----------------------------------

function 氷床出現( terrain )

	MapOverlapSetBegin()
	
	for z = 1, g_Height - 2 do
		for x = 1, g_Width - 2 do
			
			local key = x + ( z - 1 ) * ( g_Width - 2 )
			
			if g_IceSheetMap[key] == terrain then

				-- 指定の地形のみ、設定を受け付ける

				-- 配列の格納順はステージの上下と逆になるため、Z座標を反転させる
				local reverseZ = g_Height - 1 - z

				-- 指定の地形で上書きする
				MapOverlapSet(x, reverseZ, "TID_氷床_永続")

			end
		end
	end
	
	MapOverlapSetEnd()

end

-- -----------------------------------

function condition_アイテム入手()
	
	if MapIsRecollection() then
		return false
	end
	
	return ( VariableGet( "G_所持_IID_シルバーカード" ) == 0 )
	
end

-- -----------------------------------

function アイテム入手()
	
	ItemGain( MindGetUnit(), "IID_シルバーカード" )
	EffectDelete("ドロップアイテム", 9, 25)
	TerrainSetOne(9, 25, "TID_平地")
	
end

-- -----------------------------------

function リュールと戦闘()
	
	Talk( "MID_BT2" )
	
	if condition_マルスと戦闘() then
		マルスと戦闘()
	end
	
end

-- -----------------------------------

function condition_マルスと戦闘()
	
	if VariableGet( "戦闘前会話_チキ_マルス_済" ) == 1 then
		return false
	end
	
	
	local god = nil
	if MindGetForce() == FORCE_PLAYER then
		god = UnitGetGodUnit( MindGetUnit() )
	else
		god = UnitGetGodUnit( MindGetTargetUnit() )
	end
	
	return ( god == "GID_マルス" )
	
end

-- -----------------------------------
function SetAllEnemyLevel(level)
    local unit = ForceUnitGetFirst(FORCE_ENEMY)
    while unit ~= nil do
        UnitSetLevel(unit, level)
        UnitSetCapValue("PID_G001_チキ", CAPABILITY_DEF, 99)
        UnitSetCapValue(unit, CAPABILITY_DEF, 99)
        UnitSetStr(g_pid_lueur, 30)
        unit = ForceUnitGetNext(unit)
    end
end

-- ------------------------------------------
function マルスと戦闘()
	
	Talk( "MID_BT1" )
	
	VariableSet( "戦闘前会話_チキ_マルス_済", 1 )
	
end

-- -----------------------------------

function 離脱イベント()
	local unit = MindGetUnit()
	if not UnitExistOnMap( unit ) then
		return
	end
	
	UnitRotation( g_pid_lueur, ROTATE_UP)
	UnitMoveWait()
	
	VariableSet( "勝利", 1 )
end

-- -----------------------------------

